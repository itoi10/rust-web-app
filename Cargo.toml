[package]
name = "web_prod"
version = "0.1.0"
edition = "2021"


# ライブラリは再利用可能なコードをまとめたもの
[lib]
path = "src/lib.rs"


# バイナリはlib.rsを参照しつつ実行可能なファイルを作る
# main.rsに含まれる関数は他のモジュールから呼び出せないのでテストができない。
# そのため、lib.rsに関数を書いて、main.rsから呼び出すようにする。
[[bin]]
path = "src/main.rs"
name = "web_prod"


[dependencies]
actix-web = "4"
# serdeはシリアライズ/デシリアライズを行うライブラリ。derievは構造体の前にマクロをつけられるようにする
serde = { version = "1.0.188", features = ["derive"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
config = "0.13"
chrono = "0.4.30"
uuid = { version = "1.4.1", features = ["v4"] }
log = "0.4.20"
tracing = { version = "0.1.37", features = ["log"] }
tracing-subscriber = { version = "0.3.17", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = "0.3.9"
tracing-log = "0.1.3"

[dev-dependencies]
reqwest = "0.11"

# sqlxはSQLを実行するためのライブラリ
[dependencies.sqlx]
version = "0.6"
default-features = false
features = [
    "runtime-actix-rustls",  # Actix用のランタイムとRustls（Rust製のTLSライブラリ）を有効化
    "macros",                # sqlxのマクロ（例えば、query! マクロなど）を有効化
    "postgres",              # PostgreSQLデータベースを使用するための機能を有効化
    "uuid",                  # UUID型を扱うための機能を有効化
    "chrono",                # 日付と時刻を扱うための機能（chronoライブラリとの連携）を有効化
    "migrate"                # データベースのマイグレーション機能を有効化
]
